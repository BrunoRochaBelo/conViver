// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using conViver.Infrastructure.Data.Contexts;

#nullable disable

namespace conViver.Infrastructure.Migrations
{
    [DbContext(typeof(ConViverDbContext))]
    [Migration("20250620001815_AddOcorrenciasFeature")]
    partial class AddOcorrenciasFeature
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("conViver.Core.Entities.AvaliacaoPrestador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nota")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("OrdemServicoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrestadorServicoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorServicoId", "UsuarioId", "OrdemServicoId");

                    b.ToTable("AvaliacoesPrestadores");
                });

            modelBuilder.Entity("conViver.Core.Entities.Aviso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Corpo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublicadoEm")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PublicadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("conViver.Core.Entities.Boleto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoBanco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinhaDigitavel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NossoNumero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NossoNumero", "CodigoBanco")
                        .IsUnique();

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("conViver.Core.Entities.Chamado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AvaliacaoComentario")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AvaliacaoNota")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataResolucao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fotos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RespostaDoSindico")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("conViver.Core.Entities.Condominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Condominios");
                });

            modelBuilder.Entity("conViver.Core.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeArquivoOriginal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TamanhoArquivoBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TituloDescritivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioUploadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("conViver.Core.Entities.Encomenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoRastreio")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoRetirada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecebidoEm")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecebidoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remetente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RetiradoEm")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RetiradoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("RetiradoPorTerceiroDocumento")
                        .HasColumnType("TEXT");

                    b.Property<string>("RetiradoPorTerceiroNome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Encomendas");
                });

            modelBuilder.Entity("conViver.Core.Entities.LancamentoFinanceiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("conViver.Core.Entities.Ocorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("UnidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaAnexo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OcorrenciaId")
                        .HasColumnType("TEXT");

                    b.Property<long>("Tamanho")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.ToTable("OcorrenciaAnexos");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaComentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OcorrenciaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OcorrenciaComentarios");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaStatusHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlteradoPorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OcorrenciaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlteradoPorId");

                    b.HasIndex("OcorrenciaId");

                    b.ToTable("OcorrenciaStatusHistoricos");
                });

            modelBuilder.Entity("conViver.Core.Entities.OpcaoVotacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VotacaoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VotacaoId");

                    b.ToTable("OpcoesVotacao");
                });

            modelBuilder.Entity("conViver.Core.Entities.OrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ConcluidoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PrestadorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrdensServico");
                });

            modelBuilder.Entity("conViver.Core.Entities.PrestadorServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoCompleto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Especialidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("RatingMedio")
                        .HasColumnType("REAL");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prestadores");
                });

            modelBuilder.Entity("conViver.Core.Entities.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Taxa")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("conViver.Core.Entities.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FracaoIdeal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Identificacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("conViver.Core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<int>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoFaSecret")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("conViver.Core.Entities.Visitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataChegada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataValidadePreAutorizacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HorarioSaidaPrevisto")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotivoVisita")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PreAutorizadoPorCondominoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("QRCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Visitantes");
                });

            modelBuilder.Entity("conViver.Core.Entities.Votacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Votacoes");
                });

            modelBuilder.Entity("conViver.Core.Entities.VotoRegistrado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVoto")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OpcaoVotacaoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OpcaoVotacaoId");

                    b.ToTable("VotosRegistrados");
                });

            modelBuilder.Entity("conViver.Core.Entities.AvaliacaoPrestador", b =>
                {
                    b.HasOne("conViver.Core.Entities.PrestadorServico", "PrestadorServico")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("PrestadorServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestadorServico");
                });

            modelBuilder.Entity("conViver.Core.Entities.Condominio", b =>
                {
                    b.OwnsOne("conViver.Core.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("CondominioId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Uf")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CondominioId");

                            b1.ToTable("Condominios");

                            b1.WithOwner()
                                .HasForeignKey("CondominioId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("conViver.Core.Entities.Ocorrencia", b =>
                {
                    b.HasOne("conViver.Core.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("conViver.Core.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("conViver.Core.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("Unidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaAnexo", b =>
                {
                    b.HasOne("conViver.Core.Entities.Ocorrencia", "Ocorrencia")
                        .WithMany("Anexos")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaComentario", b =>
                {
                    b.HasOne("conViver.Core.Entities.Ocorrencia", "Ocorrencia")
                        .WithMany("Comentarios")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("conViver.Core.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("conViver.Core.Entities.OcorrenciaStatusHistorico", b =>
                {
                    b.HasOne("conViver.Core.Entities.Usuario", "AlteradoPor")
                        .WithMany()
                        .HasForeignKey("AlteradoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("conViver.Core.Entities.Ocorrencia", "Ocorrencia")
                        .WithMany("HistoricoStatus")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlteradoPor");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("conViver.Core.Entities.OpcaoVotacao", b =>
                {
                    b.HasOne("conViver.Core.Entities.Votacao", "Votacao")
                        .WithMany("Opcoes")
                        .HasForeignKey("VotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Votacao");
                });

            modelBuilder.Entity("conViver.Core.Entities.Usuario", b =>
                {
                    b.HasOne("conViver.Core.Entities.Unidade", "Unidade")
                        .WithMany("Usuarios")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("conViver.Core.Entities.VotoRegistrado", b =>
                {
                    b.HasOne("conViver.Core.Entities.OpcaoVotacao", "OpcaoVotacao")
                        .WithMany("VotosRecebidos")
                        .HasForeignKey("OpcaoVotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpcaoVotacao");
                });

            modelBuilder.Entity("conViver.Core.Entities.Ocorrencia", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoStatus");
                });

            modelBuilder.Entity("conViver.Core.Entities.OpcaoVotacao", b =>
                {
                    b.Navigation("VotosRecebidos");
                });

            modelBuilder.Entity("conViver.Core.Entities.PrestadorServico", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("conViver.Core.Entities.Unidade", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("conViver.Core.Entities.Votacao", b =>
                {
                    b.Navigation("Opcoes");
                });
#pragma warning restore 612, 618
        }
    }
}
