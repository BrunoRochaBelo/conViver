.cv-button {
    /* ... existing display, text-align, etc. ... */
    font-family: var(--cv-font-family-sans-serif);
    font-weight: 600;
    padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* e.g., 8px 16px */
    border-radius: var(--cv-border-radius-md); /* e.g., 8px */
    border: var(--cv-border-width) solid transparent;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, transform 0.15s ease-in-out;
    background-color: var(--current-button-default-bg);
    color: var(--current-text-primary);
}
.cv-button:hover {
    background-color: var(--current-button-default-hover-bg);
    box-shadow: var(--current-shadow-sm);
}
.cv-button:active {
    transform: scale(0.97);
    box-shadow: none;
}
.cv-button--primary {
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary);
    border-color: var(--current-primary-blue);
}
.cv-button--primary:hover {
    /* For hover on primary, typically a slightly darker shade of its current color.
       This requires either predefined darker shades for both light/dark primary blue,
       or using filter: brightness(90%); which is simpler. Let's try filter. */
    filter: brightness(90%);
    box-shadow: var(--current-shadow-sm);
}
.cv-button--primary:active {
    filter: brightness(80%); /* Even darker for active */
    transform: scale(0.97);
    box-shadow: none; /* Keep box-shadow none for primary active */
}
/* Add similar updates for --secondary, --danger, --info, :disabled states */
/* Example for a generic secondary button, if it exists, or other variants */
.cv-button--secondary {
    background-color: var(--current-button-secondary-bg);
    color: var(--current-text-on-primary); /* Assuming secondary buttons also have light text */
    border-color: var(--current-button-secondary-bg);
}
.cv-button--secondary:hover {
    background-color: var(--current-button-secondary-hover-bg);
    border-color: var(--current-button-secondary-hover-bg);
    box-shadow: var(--current-shadow-sm);
}
.cv-button--secondary:active {
    filter: brightness(90%); /* Similar to primary, slightly darker on active */
    transform: scale(0.97);
    box-shadow: none;
}

.cv-button:disabled,
.cv-button--primary:disabled,
.cv-button--secondary:disabled {
    background-color: var(--current-button-disabled-bg);
    color: var(--current-button-disabled-text);
    cursor: not-allowed;
    border-color: var(--current-button-disabled-border);
    box-shadow: none;
    filter: none; /* Ensure no brightness filter on disabled state */
}

.cv-card {
    background-color: var(--current-bg-white);
    border: var(--cv-border-width) solid var(--current-border-color);
    border-radius: var(--cv-border-radius-lg);
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-md);
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
}

.cv-card--clickable:hover {
    transform: translateY(-2px);
    box-shadow: var(--current-shadow-lg);
}

.cv-card__title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--current-text-primary);
    margin-bottom: var(--cv-spacing-sm);
}

.cv-card__subtitle {
    font-size: 0.9rem;
    color: var(--current-text-secondary);
    margin-bottom: var(--cv-spacing-md);
}

.cv-input {
    font-family: var(--cv-font-family-sans-serif);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border: var(--cv-border-width) solid var(--current-border-color);
    border-radius: var(--cv-border-radius-md);
    font-size: 1rem;
    line-height: 1.5;
    background-color: var(--current-bg-white);
    color: var(--current-text-primary);
    width: 100%;
    box-sizing: border-box;
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.cv-input::placeholder {
    color: var(--current-text-placeholder);
}
.cv-input:focus {
    border-color: var(--current-primary-blue);
    outline: 0;
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow);
}

.cv-input--error {
    border-color: var(--current-semantic-error);
    background-color: var(--current-color-error-bg);
}
.cv-input--error:focus {
    border-color: var(--current-semantic-error);
    /* Assuming --current-input-focus-shadow is adaptable or we need a semantic error focus shadow */
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow); /* This might need adjustment if focus shadow is always blue */
}
.cv-input--success {
    border-color: var(--current-semantic-success);
    background-color: var(--current-color-success-bg);
}
.cv-input--success:focus {
    border-color: var(--current-semantic-success);
    /* Assuming --current-input-focus-shadow is adaptable or we need a semantic success focus shadow */
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow); /* This might need adjustment */
}

/* REMOVED .cv-modal__content from components.css to rely on .cv-modal-content in styles.css for consistency */
/*
.cv-modal__content {
    background-color: var(--current-bg-white);
    margin: 5% auto;
    padding: var(--cv-spacing-lg);
    border: none;
    width: 90%;
    max-width: 500px;
    border-radius: var(--cv-border-radius-lg);
    position: relative;
    box-shadow: var(--current-shadow-lg);
    animation-name: animatetop;
    animation-duration: 0.4s;
    animation-timing-function: ease-out;
}
@media (min-width: 768px) {
    .cv-modal__content {
        margin: 10% auto;
    }
}
*/

/* === Global Feedback Toast Styles === */
.global-feedback-container {
    position: fixed;
    top: var(--cv-spacing-md, 16px); /* Use CSS variable or fallback */
    right: var(--cv-spacing-md, 16px);
    z-index: 1050; /* Ensure it's above most other content */
    display: flex;
    flex-direction: column;
    gap: var(--cv-spacing-sm, 8px);
    max-width: 350px; /* Or whatever width is desired */
}

.global-feedback-toast {
    background-color: var(--current-bg-white, #fff);
    color: var(--current-text-primary, #333);
    padding: var(--cv-spacing-md, 16px);
    border-radius: var(--cv-border-radius-md, 8px);
    box-shadow: var(--current-shadow-lg, 0 4px 12px rgba(0,0,0,0.15));
    display: flex;
    justify-content: space-between;
    align-items: center;
    opacity: 0;
    transform: translateX(100%);
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    min-width: 280px; /* Minimum width */
    border-left: 5px solid transparent; /* For type indication */
}

.global-feedback-toast--visible {
    opacity: 1;
    transform: translateX(0);
}

.global-feedback-toast--hiding {
    opacity: 0;
    transform: translateX(110%); /* Move a bit further out when hiding */
}

.global-feedback-toast__close-btn {
    background: none;
    border: none;
    color: var(--current-text-secondary, #777);
    font-size: 1.5rem;
    line-height: 1;
    padding: 0 var(--cv-spacing-xs, 4px);
    margin-left: var(--cv-spacing-md, 16px);
    cursor: pointer;
    transition: color 0.2s ease;
}

.global-feedback-toast__close-btn:hover {
    color: var(--current-text-primary, #333);
}

/* Type-specific styles */
/* Using existing semantic color variables where appropriate */
.global-feedback-toast--success {
    border-left-color: var(--current-semantic-success, green);
    /* background-color: var(--current-color-success-bg, #e6fffa); */ /* Optional: subtle background */
}
.global-feedback-toast--success .global-feedback-toast__close-btn {
    /* color: var(--current-semantic-success, green); */ /* Optional: themed close button */
}

.global-feedback-toast--error {
    border-left-color: var(--current-semantic-error, red);
    /* background-color: var(--current-color-error-bg, #ffe6e6); */
}

.global-feedback-toast--warning {
    border-left-color: var(--current-semantic-warning, orange);
    /* background-color: var(--current-color-warning-bg, #fff0e6); */
}

.global-feedback-toast--info {
    border-left-color: var(--current-semantic-info, blue);
    /* background-color: var(--current-color-info-bg, #e6f7ff); */
}
/* === End Global Feedback Toast Styles === */

/* === Alert Component Styles === */
.cv-alert {
    padding: var(--cv-spacing-md); /* 16px */
    margin-bottom: var(--cv-spacing-md); /* 16px */
    border: var(--cv-border-width) solid transparent;
    border-radius: var(--cv-border-radius-md); /* 8px */
    font-size: 0.9rem;
    text-align: left; /* Default to left, can be overridden */
}

.cv-alert--error {
    color: var(--current-semantic-error);
    background-color: var(--current-color-error-bg);
    border-color: var(--current-semantic-error);
}

.cv-alert--success {
    color: var(--current-semantic-success);
    background-color: var(--current-color-success-bg);
    border-color: var(--current-semantic-success);
}

.cv-alert--warning {
    color: var(--current-semantic-warning);
    background-color: var(--current-color-warning-bg);
    border-color: var(--current-semantic-warning);
}

.cv-alert--info {
    color: var(--current-semantic-info);
    background-color: var(--current-color-info-bg);
    border-color: var(--current-semantic-info);
}

/* Utility class to hide alerts when needed */
.cv-alert--hidden {
    display: none;
}
/* === End Alert Component Styles === */

@keyframes animatetop {
    from {top: -300px; opacity: 0}
    to {top: 0; opacity: 1}
}

.cv-modal__close {
    color: var(--current-text-placeholder); /* Was --cv-gray-500 */
    /* Consider using an SVG icon or a styled 'Ã—' */
}
.cv-modal__close:hover,
.cv-modal__close:focus {
    color: var(--current-text-primary);
}
.cv-modal__title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--current-text-primary);
    margin-bottom: var(--cv-spacing-md);
}

.cv-header {
    /* Apple-inspired styling */
    background-color: rgba(242, 242, 247, 0.8); /* Light mode translucent background (System Gray 6 with alpha) */
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    backdrop-filter: blur(20px) saturate(180%);
    color: var(--current-text-primary);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Subtle border for light mode */
    position: sticky; /* Make header sticky */
    top: 0;
    z-index: 1020; /* Ensure it's above other content but below modals */
}
.cv-header__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

html[data-theme="dark"] .cv-header {
    background-color: rgba(44, 44, 46, 0.75); /* Dark mode translucent background (System Gray 2 Dark with alpha) */
    border-bottom: 1px solid rgba(255, 255, 255, 0.15); /* Subtle border for dark mode */
}

@media (min-width: 768px) {
    .cv-header {
        padding: var(--cv-spacing-md) var(--cv-spacing-lg); /* Desktop padding */
        flex-wrap: nowrap;
    }
}
.cv-header__title {
    margin: 0;
    font-size: 1.25rem; /* Adjusted for a more Apple-like feel */
    font-weight: 600; /* Open Sans Semibold */
}
@media (min-width: 768px) {
    .cv-header__title {
        font-size: 1.5rem; /* Desktop title size */
    }
}

.cv-nav {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    gap: var(--cv-spacing-xs);
    /* Apple-inspired styling for nav - similar to header but can be slightly different */
    background-color: rgba(248, 248, 250, 0.85); /* Slightly different from header, or could be same */
    -webkit-backdrop-filter: blur(18px) saturate(170%);
    backdrop-filter: blur(18px) saturate(170%);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border-bottom: 1px solid rgba(0, 0, 0, 0.08); /* Subtle border for light mode */
    /* position: sticky; /* If nav should also stick below header */
    /* top: YOUR_HEADER_HEIGHT; /* Calculate or set fixed header height */
    /* z-index: 1010; */
}
.cv-nav__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    gap: var(--cv-spacing-sm);
}

html[data-theme="dark"] .cv-nav {
    background-color: rgba(50, 50, 52, 0.8); /* Dark mode nav bg */
    border-bottom: 1px solid rgba(255, 255, 255, 0.12);
}

.cv-nav__link {
    color: var(--current-text-primary); /* Changed from text-link for a more subdued default state */
    text-decoration: none;
    font-weight: normal;
    display: flex; /* Support icon and label */
    align-items: center;
    width: 100%;
    text-align: left;
    padding: var(--cv-spacing-sm);
    border-radius: var(--cv-border-radius-md);
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, transform 0.1s ease-in-out;
    font-weight: 500;
    gap: var(--cv-spacing-xs);
}
.cv-nav__icon {
    width: 20px;
    height: 20px;
    display: inline-block;
    vertical-align: middle;
}
.cv-nav__label {
    line-height: 1;
}
@media (min-width: 768px) {
    .cv-nav {
        flex-direction: row;
        align-items: center;
        width: auto; /* Revert to auto width for desktop */
        gap: var(--cv-spacing-sm); /* Restore original gap */
        /* padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* Ensure this is suitable or adjust */
        /* Consider removing bottom border for desktop if header has one and they are visually connected */
        /* border-bottom: none; */
    }
    html[data-theme="dark"] .cv-nav {
        /* border-bottom: none; */ /* Example for dark theme desktop */
    }
    .cv-nav__link {
        display: inline-block; /* Revert for desktop */
        width: auto;
        text-align: center; /* Or left, depending on design */
        padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* Adjusted padding for desktop */
    }
}
.cv-nav__link:hover {
    background-color: rgba(0, 0, 0, 0.05); /* Subtle hover for light mode */
    color: var(--current-primary-blue);
    /* transform: translateY(-1px); /* Optional: subtle lift */
}
html[data-theme="dark"] .cv-nav__link:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Subtle hover for dark mode */
}

.cv-nav__link--active {
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary) !important; /* Ensure text color overrides default */
    font-weight: 600; /* Semibold for active link */
    box-shadow: 0 1px 3px rgba(0, 122, 255, 0.2); /* Subtle shadow for active link */
}
.cv-nav__link--active:hover {
    background-color: var(--current-primary-blue); /* Keep background color */
    filter: brightness(90%); /* Similar to primary button hover */
    color: var(--current-text-on-primary); /* Keep text color */
}

/* Responsive Table Wrapper */
.cv-table-responsive-wrapper {
    overflow-x: auto;
    width: 100%;
    margin-bottom: var(--cv-spacing-md); /* Space below scrollable table */
}

/* Apply to actual <table> elements, ensure it can be overridden for specific table needs */
.cv-table {
    width: 100%; /* Default to full width within its container */
    border-collapse: collapse; /* Common practice */
    /* min-width: 600px; */ /* Example: if table content is wide, forces scrollbar.
                              This should be set based on table content, or on specific table instances.
                              Avoid setting a global min-width here unless all tables are complex. */
}

/* Utility Classes for Responsiveness */
.hide-on-mobile {
    display: none !important; /* Use !important to ensure override if needed, use sparingly */
}
@media (min-width: 768px) { /* Tablet and up */
    .hide-on-mobile {
        display: block !important; /* Or flex, inline, etc., as appropriate to restore */
    }
}

.hide-on-desktop {
    display: block !important; /* Or flex, etc. */
}
@media (min-width: 768px) { /* Tablet and up */
    .hide-on-desktop {
        display: none !important;
    }
}
/* User avatar button */
.user-avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary);
    font-weight: 600;
    text-transform: uppercase;
    overflow: hidden;
    border: 1.5px solid var(--current-primary-blue); /* Subtle border, themed */
    cursor: pointer;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.user-avatar:hover {
    transform: scale(1.1);
    box-shadow: 0 0 8px rgba(0, 122, 255, 0.5); /* Subtle glow effect */
}
.user-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
}
/* User menu modal overrides */
.user-menu-modal .cv-modal-content {
    padding: var(--cv-spacing-md);
    max-width: 300px; /* Smaller max-width for user menu modal */
    /* Ensure it still gets the primary modal animation and shadow from styles.css */
}
.user-menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--cv-spacing-sm);
}
.user-menu-list button {
    width: 100%;
}

/* Skeleton Screen Components */
.feed-skeleton-container {
    /* This container is managed by JS (display: block/none) */
}

.feed-skeleton-item {
    background-color: var(--current-bg-white); /* Match card background */
    border: var(--cv-border-width) solid var(--current-border-color); /* Match card border */
    border-radius: var(--cv-border-radius-lg); /* Match card radius */
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-md); /* Match card shadow */
    position: relative;
    overflow: hidden; /* Important for shimmer effect */
}

/* Base for skeleton placeholder elements */
.skeleton-title,
.skeleton-line {
    background-color: var(--current-skeleton-bg, var(--cv-gray-200)); /* Use a themeable color or fallback */
    border-radius: 4px; /* Consistent border radius for placeholders */
    margin-bottom: 10px; /* Spacing between lines */
}

/* Specifics for title placeholder */
.skeleton-title {
    width: 60%;
    height: 20px; /* Larger height for title */
}

/* Specifics for text line placeholders */
.skeleton-line {
    width: 100%; /* Full width by default */
    height: 16px;
}

.skeleton-line.short {
    width: 75%; /* Shorter line variant */
}

.skeleton-line:last-child {
    margin-bottom: 0; /* No margin for the last line in a group */
}

/* Shimmer Animation */
.feed-skeleton-item::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0; /* Start from the left edge of the item */
    height: 100%;
    width: 100%; /* Cover the entire item */
    background: linear-gradient(
        90deg,
        transparent,
        var(--current-skeleton-shimmer-color, rgba(255, 255, 255, 0.5)), /* Themeable shimmer */
        transparent
    );
    transform: translateX(-100%); /* Start off-screen to the left */
    animation: skeleton-shimmer 1.5s infinite; /* Slower, smoother animation */
}

@keyframes skeleton-shimmer {
    0% {
        transform: translateX(-100%);
    }
    50% { /* Add a midpoint for a more noticeable shimmer pass */
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%); /* Keep it off-screen at the end before looping */
    }
}

/* Ensure dark theme variables are defined in styles.css or :root */
/* Example:
:root {
    --current-skeleton-bg: var(--cv-gray-200);
    --current-skeleton-shimmer-color: rgba(255, 255, 255, 0.5);
}
html[data-theme="dark"] {
    --current-skeleton-bg: var(--cv-gray-700); // Or a darker shade
    --current-skeleton-shimmer-color: rgba(255, 255, 255, 0.1); // More subtle shimmer for dark
}
*/

