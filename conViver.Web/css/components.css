.cv-button {
    font-family: var(--cv-font-family-sans-serif);
    font-weight: 500; /* Medium weight, common in iOS */
    font-size: var(--cv-font-size-text-md); /* Use responsive text size */
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border-radius: var(--cv-border-radius-md);
    border: var(--cv-border-width) solid transparent;
    cursor: pointer;
    transition: background-color 0.15s ease-out, color 0.15s ease-out, border-color 0.15s ease-out, box-shadow 0.15s ease-out, transform 0.1s ease-out;
    background-color: var(--current-button-default-bg); /* Default: Light gray */
    color: var(--current-text-link); /* Default text color: primary blue */
    min-height: 44px; /* iOS touch target guideline */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    line-height: 1.3; /* Adjusted line height */
    text-decoration: none; /* Remove underline from button links */
    -webkit-appearance: none; /* Remove default browser styles on iOS */
    -moz-appearance: none;
    appearance: none;
}
/* Increase padding and font size on larger screens for better usability */
@media (min-width: 768px) {
    .cv-button {
        font-size: var(--cv-font-size-md); /* Corresponds to 1rem on desktop (16px if base is 16px) */
        padding: calc(var(--cv-spacing-sm) + 2px) calc(var(--cv-spacing-md) + 4px); /* Slightly larger padding */
    }
}

.cv-button:hover {
    background-color: var(--current-button-default-hover-bg);
    filter: brightness(95%); /* Subtle brightness change on hover */
}
.cv-button:active {
    transform: scale(0.97); /* Slightly less pronounced scale */
    background-color: var(--cv-gray-300);
    filter: brightness(90%);
    box-shadow: none;
}

.cv-button--primary {
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary);
    border-color: var(--current-primary-blue);
    font-weight: 500; /* Consistent medium weight */
}
.cv-button--primary:hover {
    filter: brightness(90%); /* Darken primary blue slightly */
    box-shadow: none;
}
.cv-button--primary:active {
    filter: brightness(80%);
    transform: scale(0.97);
    box-shadow: none;
}

.cv-button--secondary {
    background-color: var(--cv-gray-200); /* Light gray */
    color: var(--current-text-primary); /* Dark text */
    border-color: var(--cv-gray-200);
}
html[data-theme="dark"] .cv-button--secondary {
    background-color: var(--cv-dark-gray-400); /* Darker gray for dark mode */
    color: var(--cv-dark-text-primary); /* Light text */
    border-color: var(--cv-dark-gray-400);
}
.cv-button--secondary:hover {
    filter: brightness(92%);
    box-shadow: none;
}
.cv-button--secondary:active {
    filter: brightness(85%);
    transform: scale(0.97);
    box-shadow: none;
}

.cv-button--tinted {
    background-color: var(--cv-primary-blue-alpha-15);
    color: var(--current-primary-blue);
    border-color: transparent;
}
html[data-theme="dark"] .cv-button--tinted {
    background-color: var(--cv-dark-primary-blue-alpha-20);
}
.cv-button--tinted:hover {
    filter: brightness(95%); /* Subtle change */
}
.cv-button--tinted:active {
    filter: brightness(90%);
    transform: scale(0.97);
}

.cv-button--borderless {
    background-color: transparent;
    color: var(--current-text-link);
    border-color: transparent;
    padding-left: var(--cv-spacing-sm); /* Slightly less horizontal padding for borderless */
    padding-right: var(--cv-spacing-sm);
}
.cv-button--borderless:hover {
    background-color: var(--cv-gray-100-alpha-50);
    filter: none;
}
html[data-theme="dark"] .cv-button--borderless:hover {
    background-color: var(--cv-dark-gray-100-alpha-50);
}
.cv-button--borderless:active {
    background-color: var(--cv-gray-200-alpha-70);
    transform: scale(0.97);
    filter: none;
}

/* Icon Button Styles */
.cv-button.icon-button {
    padding: var(--cv-spacing-sm); /* Consistent padding for icon buttons */
    min-height: 40px; /* Slightly smaller min-height, but still good touch target */
    min-width: 40px;
    width: auto; /* Auto width based on content (icon) */
    height: auto; /* Auto height */
    border-radius: 50%; /* Circular icon buttons are common in iOS */
}
.cv-button.icon-button.has-indicator::after { /* Notification dot */
    content: "";
    position: absolute;
    top: 6px; /* Adjusted position */
    right: 6px; /* Adjusted position */
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: var(--current-primary-red); /* Use red for notifications */
    border: 1.5px solid var(--current-bg-white); /* White border for contrast */
}
html[data-theme="dark"] .cv-button.icon-button.has-indicator::after {
    border-color: var(--current-bg-element); /* Dark theme background for border */
}

.cv-button.icon-button svg {
    transition: transform 0.2s ease-out; /* Faster transition for icon rotation */
    width: 1.2em; /* Ensure icon scales with button font size if text is present */
    height: 1.2em;
}
.cv-button.icon-button.rotated svg {
    transform: rotate(180deg);
}

/* Disabled State */
.cv-button:disabled,
.cv-button[disabled] { /* Add attribute selector for robustness */
    background-color: var(--current-button-disabled-bg) !important; /* Important to override specific types */
    color: var(--current-button-disabled-text) !important;
    border-color: var(--current-button-disabled-border) !important;
    cursor: not-allowed;
    box-shadow: none !important;
    filter: none !important;
    opacity: 0.65; /* Standard opacity for disabled elements */
}

/* Inline spinner within buttons */
.cv-button .inline-spinner {
    width: 1em; /* Relative to button's font size */
    height: 1em;
    border-width: 0.18em; /* Slightly thicker for visibility */
    margin-left: var(--cv-spacing-sm);
    vertical-align: -0.15em; /* Fine-tune vertical alignment */
}


.cv-card {
    background-color: var(--current-bg-white);
    border: var(--cv-border-width) solid var(--current-border-subtle); /* Use subtle border */
    border-radius: var(--cv-border-radius-lg); /* Consistent large radius */
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-sm); /* Lighter shadow by default */
    transition: transform 0.15s ease-out, box-shadow 0.15s ease-out; /* Faster transitions */
}
@media (min-width: 768px) {
    .cv-card {
        padding: var(--cv-spacing-lg); /* More padding on larger screens */
        box-shadow: var(--current-shadow-md); /* Slightly more pronounced shadow on desktop */
    }
}

.cv-card--clickable:hover {
    transform: translateY(-2px);
    box-shadow: var(--current-shadow-lg); /* More pronounced shadow on hover */
}

.cv-card__title {
    font-size: var(--cv-font-size-h4); /* Use responsive heading size */
    font-weight: 600;
    color: var(--current-text-primary);
    margin-bottom: var(--cv-spacing-sm);
}

.cv-card__subtitle {
    font-size: var(--cv-font-size-text-md); /* Use responsive text size */
    color: var(--current-text-secondary);
    margin-bottom: var(--cv-spacing-md);
}
@media (min-width: 768px) {
    .cv-card__title {
        font-size: var(--cv-font-size-h3); /* Larger on desktop */
    }
    .cv-card__subtitle {
        font-size: var(--cv-font-size-text-lg); /* Larger on desktop */
    }
}

/* Generic grid layout for card collections - MOVED to styles.css as .card-grid */

.cv-input,
textarea.cv-input,
select.cv-input { /* Apply to textarea and select with .cv-input class as well */
    font-family: var(--cv-font-family-sans-serif);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border: var(--cv-border-width) solid var(--current-border-color);
    border-radius: var(--cv-border-radius-md);
    font-size: var(--cv-font-size-text-md); /* Responsive text size */
    line-height: 1.4; /* Adjusted line height */
    background-color: var(--current-bg-white);
    color: var(--current-text-primary);
    width: 100%;
    box-sizing: border-box;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    -webkit-appearance: none; /* Remove default iOS styling for inputs/selects */
    -moz-appearance: none;
    appearance: none;
}
@media (min-width: 768px) {
    .cv-input, textarea.cv-input, select.cv-input {
        font-size: var(--cv-font-size-md); /* Desktop font size */
    }
}

.cv-input::placeholder {
    color: var(--current-text-placeholder);
    opacity: 1; /* Ensure placeholder is not too faint */
}
.cv-input:focus,
textarea.cv-input:focus,
select.cv-input:focus {
    border-color: var(--current-primary-blue);
    outline: 0;
    box-shadow: 0 0 0 2.5px var(--current-input-focus-shadow); /* Thinner focus ring, more iOS like */
}

textarea.cv-input {
    resize: vertical; /* Allow only vertical resize */
    min-height: 80px; /* Default min-height for textareas */
}

select.cv-input {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23${(getComputedStyle(document.documentElement).getPropertyValue('--current-text-placeholder') || '#AEAEB2').substring(1)}'%3E%3Cpath d='M8 11.293l-4.146-4.147a.5.5 0 0 1 .708-.708L8 9.879l3.438-3.438a.5.5 0 0 1 .707.708L8 11.293z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right var(--cv-spacing-sm) center;
    background-size: 16px 16px;
    padding-right: calc(var(--cv-spacing-md) + 16px + var(--cv-spacing-sm)); /* Make space for arrow */
}
select[multiple].cv-input { /* Styling for multiple select */
    background-image: none; /* No arrow for multiple select */
    padding-right: var(--cv-spacing-md); /* Standard padding */
    min-height: 120px; /* Taller for multiple options */
}


.cv-input--error {
    border-color: var(--current-semantic-error) !important; /* Ensure override */
    background-color: var(--current-color-error-bg);
}
.cv-input--error:focus {
    box-shadow: 0 0 0 2.5px var(--current-semantic-error); /* Red focus ring for error */
}

.cv-input--success {
    border-color: var(--current-semantic-success) !important; /* Ensure override */
    background-color: var(--current-color-success-bg);
}
.cv-input--success:focus {
    box-shadow: 0 0 0 2.5px var(--current-semantic-success); /* Green focus ring for success */
}

/* Modal styles are primarily in styles.css for better context and page-specific overrides */
/* Global Feedback Toast Styles - also in styles.css, ensure consistency or consolidate if identical */
/*
.cv-modal__content {
    background-color: var(--current-bg-white);
    margin: 5% auto;
    padding: var(--cv-spacing-lg);
    border: none;
    width: 90%;
    max-width: 500px;
    border-radius: var(--cv-border-radius-lg);
    position: relative;
    box-shadow: var(--current-shadow-lg);
    animation-name: animatetop;
    animation-duration: 0.4s;
    animation-timing-function: ease-out;
}
@media (min-width: 768px) {
    .cv-modal__content {
        margin: 10% auto;
    }
}
*/

/* === Global Feedback Toast Styles === */
.global-feedback-container {
    position: fixed;
    top: var(--cv-spacing-md, 16px); /* Use CSS variable or fallback */
    right: var(--cv-spacing-md, 16px);
    z-index: 1050; /* Ensure it's above most other content */
    display: flex;
    flex-direction: column;
    gap: var(--cv-spacing-sm, 8px);
    max-width: 350px; /* Or whatever width is desired */
}

.global-feedback-toast {
    background-color: var(--current-bg-white, #fff);
    color: var(--current-text-primary, #333);
    padding: var(--cv-spacing-md, 16px);
    border-radius: var(--cv-border-radius-md, 8px);
    box-shadow: var(--current-shadow-lg, 0 4px 12px rgba(0,0,0,0.15));
    display: flex;
    justify-content: space-between;
    align-items: center;
    opacity: 0;
    transform: translateX(100%);
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    min-width: 280px; /* Minimum width */
    border-left: 5px solid transparent; /* For type indication */
}

.global-feedback-toast--visible {
    opacity: 1;
    transform: translateX(0);
}

.global-feedback-toast--hiding {
    opacity: 0;
    transform: translateX(110%); /* Move a bit further out when hiding */
}

.global-feedback-toast__close-btn {
    background: none;
    border: none;
    color: var(--current-text-secondary, #777);
    font-size: 1.5rem;
    line-height: 1;
    padding: 0 var(--cv-spacing-xs, 4px);
    margin-left: var(--cv-spacing-md, 16px);
    cursor: pointer;
    transition: color 0.2s ease;
}

.global-feedback-toast__close-btn:hover {
    color: var(--current-text-primary, #333);
}

/* Type-specific styles */
/* Using existing semantic color variables where appropriate */
.global-feedback-toast--success {
    border-left-color: var(--current-semantic-success, green);
    /* background-color: var(--current-color-success-bg, #e6fffa); */ /* Optional: subtle background */
}
.global-feedback-toast--success .global-feedback-toast__close-btn {
    /* color: var(--current-semantic-success, green); */ /* Optional: themed close button */
}

.global-feedback-toast--error {
    border-left-color: var(--current-semantic-error, red);
    /* background-color: var(--current-color-error-bg, #ffe6e6); */
}

.global-feedback-toast--warning {
    border-left-color: var(--current-semantic-warning, orange);
    /* background-color: var(--current-color-warning-bg, #fff0e6); */
}

.global-feedback-toast--info {
    border-left-color: var(--current-semantic-info, blue);
    /* background-color: var(--current-color-info-bg, #e6f7ff); */
}
@media (max-width: 576px) { /* On small screens, make toasts full width */
    .global-feedback-container {
        top: 0;
        right: 0;
        left: 0;
        max-width: 100%;
        padding: var(--cv-spacing-sm);
        gap: var(--cv-spacing-xs);
    }
    .global-feedback-toast {
        min-width: 0; /* Allow to shrink */
        width: 100%;
        border-radius: 0; /* Full width toasts often have no radius or only bottom */
        border-left-width: 3px; /* Thinner accent */
        padding: var(--cv-spacing-sm);
        box-shadow: var(--current-shadow-md); /* Slightly less shadow for full-width */
    }
    .global-feedback-toast__close-btn {
        font-size: 1.2rem; /* Smaller close button */
        margin-left: var(--cv-spacing-sm);
    }
}
/* === End Global Feedback Toast Styles === */

/* === Alert Component Styles === */
.cv-alert {
    padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* Adjusted padding */
    margin-bottom: var(--cv-spacing-md);
    border: var(--cv-border-width) solid transparent;
    border-radius: var(--cv-border-radius-md);
    font-size: var(--cv-font-size-text-md); /* Responsive text size */
    text-align: left;
    line-height: 1.5; /* Improved line height */
}
/* Add icons to alerts for better visual cues (optional, requires icons in HTML or via ::before) */
/* Example: .cv-alert::before { font-family: "FontAwesome"; margin-right: var(--cv-spacing-sm); } */
/* .cv-alert--error::before { content: "\f071"; } /* Exclamation triangle */

.cv-alert--error {
    color: var(--current-semantic-error);
    background-color: var(--current-color-error-bg);
    border-color: var(--current-semantic-error);
}

.cv-alert--success {
    color: var(--current-semantic-success);
    background-color: var(--current-color-success-bg);
    border-color: var(--current-semantic-success);
}

.cv-alert--warning {
    color: var(--current-semantic-warning);
    background-color: var(--current-color-warning-bg);
    border-color: var(--current-semantic-warning);
}

.cv-alert--info {
    color: var(--current-semantic-info);
    background-color: var(--current-color-info-bg);
    border-color: var(--current-semantic-info);
}

.cv-alert--hidden {
    display: none;
}
/* === End Alert Component Styles === */

/* Modal animation and close/title styles are in styles.css for better context */

.cv-header {
    background-color: rgba(242, 242, 247, 0.85); /* Adjusted alpha for light mode */
    -webkit-backdrop-filter: blur(18px) saturate(180%); /* Slightly different blur/saturate */
    backdrop-filter: blur(18px) saturate(180%);
    color: var(--current-text-primary);
    padding: 0 var(--cv-spacing-sm); /* Reduced vertical padding for a thinner header on mobile */
    height: var(--cv-header-height-mobile, 50px); /* Specific mobile height */
    display: flex;
    /* flex-wrap: wrap; /* Should not wrap on mobile */
    justify-content: space-between;
    align-items: center;
    border-bottom: 0.5px solid var(--cv-gray-400); /* Thinner border, more iOS like */
    position: sticky;
    top: 0;
    z-index: 1020;
}
:root { /* Define mobile header height */
    --cv-header-height-mobile: 50px;
    --cv-header-height-desktop: 60px; /* Example desktop height */
}
.cv-header__container { /* This container is inside .cv-header */
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 1200px; /* Max width for content within header */
    margin: 0 auto; /* Center container */
    padding: 0 var(--cv-spacing-md); /* Padding for content within header */
}
@media (min-width: 768px) { /* Desktop header */
    .cv-header {
        height: var(--cv-header-height-desktop);
        padding: 0 var(--cv-spacing-md); /* Adjust padding if needed */
    }
    .cv-header__container {
         padding: 0 var(--cv-spacing-lg); /* Larger padding for desktop */
    }
}


html[data-theme="dark"] .cv-header {
    background-color: rgba(28, 28, 30, 0.85); /* Dark mode: System Gray 6 Dark with alpha */
    border-bottom: 0.5px solid var(--cv-dark-gray-500); /* Dark theme border */
}


.cv-header__title {
    margin: 0;
    font-size: 1.1rem; /* Slightly smaller title for mobile header */
    font-weight: 600; /* Semibold */
    text-align: center; /* Center title on mobile if nav buttons are icons */
    flex-grow: 1; /* Allow title to take space and center */
}
/* If there are buttons on both sides of title, ensure it centers correctly */
.cv-header__left-actions, .cv-header__right-actions {
    display: flex;
    align-items: center;
    flex-shrink: 0; /* Prevent action groups from shrinking */
}
.cv-header__left-actions {
    justify-content: flex-start;
}
.cv-header__right-actions {
    justify-content: flex-end;
}
/* Example: if title should be strictly centered, give equal basis to left/right action containers */
/* .cv-header__left-actions, .cv-header__right-actions { flex-basis: 60px; } */


@media (min-width: 768px) { /* Desktop title */
    .cv-header__title {
        font-size: 1.25rem; /* Slightly larger for desktop */
        text-align: left; /* Align left on desktop if nav is also present */
        flex-grow: 0; /* Don't grow if nav takes space */
    }
}

/* Navigation Bar Styles */
/* Mobile: Off-canvas menu or bottom navigation. Desktop: Top navigation */
.cv-nav { /* This is the main navigation container */
    /* Mobile (default) - Hidden, shown by menu button */
    display: none;
    /* Desktop - Shown in header or below */
}

@media (min-width: 768px) { /* Desktop Navigation */
    .cv-nav {
        display: flex;
        align-items: center;
        margin-left: var(--cv-spacing-lg); /* Space between title and nav */
    }
    .cv-nav__list {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
        gap: var(--cv-spacing-sm);
    }
    .cv-nav__link {
        color: var(--current-text-link); /* Use link color for desktop nav items */
        text-decoration: none;
        font-weight: 500; /* Medium weight */
        padding: var(--cv-spacing-xs) var(--cv-spacing-sm);
        border-radius: var(--cv-border-radius-sm);
        transition: background-color 0.15s ease, color 0.15s ease;
        font-size: var(--cv-font-size-text-md); /* Responsive */
    }
    .cv-nav__link:hover {
        background-color: var(--cv-primary-blue-alpha-15);
        color: var(--current-primary-blue);
    }
    html[data-theme="dark"] .cv-nav__link:hover {
        background-color: var(--cv-dark-primary-blue-alpha-20);
    }
    .cv-nav__link--active {
        color: var(--current-primary-blue) !important;
        font-weight: 600; /* Semibold for active */
        background-color: var(--cv-primary-blue-alpha-15); /* Tinted background for active */
    }
    html[data-theme="dark"] .cv-nav__link--active {
        color: var(--cv-dark-primary-blue) !important;
        background-color: var(--cv-dark-primary-blue-alpha-20);
    }
    .cv-nav__icon { /* Desktop nav icons if used */
        margin-right: var(--cv-spacing-xs);
        width: 18px;
        height: 18px;
    }
}

/* Mobile Navigation Menu (Example: Off-canvas) */
.mobile-nav-menu {
    position: fixed;
    top: 0;
    left: -280px; /* Start off-screen */
    width: 280px;
    height: 100%;
    background-color: var(--current-bg-white);
    box-shadow: var(--current-shadow-lg);
    z-index: 1030; /* Above header but below modals */
    transition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow-y: auto;
    padding-top: var(--cv-header-height-mobile, 50px); /* Space for status bar or if header is over it */
}
.mobile-nav-menu.open {
    left: 0;
}
html[data-theme="dark"] .mobile-nav-menu {
    background-color: var(--cv-dark-bg-element);
}
.mobile-nav-menu__list {
    list-style: none;
    margin: 0;
    padding: var(--cv-spacing-md);
}
.mobile-nav-menu__link {
    display: flex;
    align-items: center;
    padding: var(--cv-spacing-md) var(--cv-spacing-sm);
    color: var(--current-text-primary);
    text-decoration: none;
    font-size: var(--cv-font-size-text-lg); /* Larger text for mobile menu items */
    border-radius: var(--cv-border-radius-md);
    transition: background-color 0.15s ease;
}
.mobile-nav-menu__link:hover,
.mobile-nav-menu__link--active {
    background-color: var(--cv-primary-blue-alpha-15);
    color: var(--current-primary-blue);
}
html[data-theme="dark"] .mobile-nav-menu__link:hover,
html[data-theme="dark"] .mobile-nav-menu__link--active {
    background-color: var(--cv-dark-primary-blue-alpha-20);
    color: var(--cv-dark-primary-blue);
}
.mobile-nav-menu__icon {
    margin-right: var(--cv-spacing-md);
    width: 22px; /* Larger icons for mobile menu */
    height: 22px;
    color: var(--current-text-secondary); /* Icon color */
}
.mobile-nav-menu__link:hover .mobile-nav-menu__icon,
.mobile-nav-menu__link--active .mobile-nav-menu__icon {
    color: var(--current-primary-blue); /* Active icon color */
}
html[data-theme="dark"] .mobile-nav-menu__link:hover .mobile-nav-menu__icon,
html[data-theme="dark"] .mobile-nav-menu__link--active .mobile-nav-menu__icon {
    color: var(--cv-dark-primary-blue);
}

/* Overlay for off-canvas menu */
.mobile-nav-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.4);
    z-index: 1025; /* Below menu, above content */
    display: none; /* Shown by JS */
    opacity: 0;
    transition: opacity 0.3s ease;
}
.mobile-nav-overlay.open {
    display: block;
    opacity: 1;
}


/* Hamburger Menu Button (if used for mobile nav) */
.menu-toggle-button { /* This would be an icon-button */
    /* Styles for hamburger icon button, uses .cv-button.icon-button base */
    display: inline-flex;
    /* visibility is controlled by .hide-on-desktop in layout.html */
}


/* Bottom Navigation Bar for Mobile */
.cv-bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--cv-bottom-nav-height, 60px); /* Controlled by JS via body class */
    background-color: var(--current-nav-bg);
    border-top: 0.5px solid var(--current-border-color);
    display: none; /* Hidden by default, shown by JS via body class + media query */
    justify-content: space-around;
    align-items: stretch; /* Stretch items to fill height */
    box-shadow: 0 -1px 5px rgba(0,0,0,0.08);
    z-index: 1010;
}
@media (max-width: 767px) { /* Show only on mobile screens */
    body.has-bottom-nav .cv-bottom-nav {
        display: flex;
    }
}
html[data-theme="dark"] .cv-bottom-nav {
    background-color: var(--cv-dark-bg-element);
    border-top: 0.5px solid var(--cv-dark-gray-400);
    box-shadow: 0 -1px 5px rgba(0,0,0,0.2);
}

.cv-bottom-nav__item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex-grow: 1;
    flex-basis: 0; /* Ensure items distribute space evenly */
    padding: var(--cv-spacing-xs) var(--cv-spacing-xs); /* Adjusted padding */
    color: var(--current-text-secondary);
    text-decoration: none;
    font-size: 0.65rem; /* Even smaller for compact labels */
    line-height: 1.2;
    gap: 1px; /* Minimal gap */
    transition: color 0.15s ease;
    height: 100%;
    -webkit-tap-highlight-color: transparent;
    position: relative; /* For potential active indicator */
}

.cv-bottom-nav__icon {
    width: 22px; /* Slightly smaller icons */
    height: 22px;
}
.cv-bottom-nav__icon svg {
    width: 100%;
    height: 100%;
    display: block;
}
.cv-bottom-nav__label {
    margin-top: 2px; /* Add small margin to label if needed */
    white-space: nowrap; /* Prevent label wrapping */
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%; /* Ensure label doesn't overflow item */
}

.cv-bottom-nav__item.active {
    color: var(--current-primary-blue);
}
/* Optional: Active indicator like a small dot or line */
/*
.cv-bottom-nav__item.active::after {
    content: '';
    position: absolute;
    bottom: 4px;
    left: 50%;
    transform: translateX(-50%);
    width: 5px;
    height: 5px;
    background-color: var(--current-primary-blue);
    border-radius: 50%;
}
*/

/* Hide other navs when bottom nav is active on mobile */
@media (max-width: 767px) {
    body.has-bottom-nav .cv-header .cv-nav, /* Hide desktop nav inside header */
    body.has-bottom-nav #mobileNavMenu,
    body.has-bottom-nav #mobileMenuToggle {
        display: none !important;
    }
}


/* Responsive Table Wrapper - General purpose */
.cv-table-responsive-wrapper {
    overflow-x: auto;
    width: 100%;
    margin-bottom: var(--cv-spacing-md); /* Space below scrollable table */
}

/* Apply to actual <table> elements, ensure it can be overridden for specific table needs */
.cv-table {
    width: 100%;
    border-collapse: collapse;
    font-size: var(--cv-font-size-text-md); /* Base font size for table content */
}
/* Ensure table headers and cells have consistent padding and alignment */
.cv-table th,
.cv-table td {
    padding: var(--cv-spacing-sm); /* Base padding for mobile */
    text-align: left;
    border-bottom: 1px solid var(--current-border-subtle);
    vertical-align: top; /* Align content to top for better readability if cells have varying heights */
}
@media (min-width: 768px) {
    .cv-table th,
    .cv-table td {
        padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* More padding for desktop */
        vertical-align: middle; /* Middle align on desktop */
    }
}

.cv-table th {
    font-weight: 600; /* Semibold for headers */
    background-color: var(--current-bg-element); /* Subtle background for headers */
}
/* Zebra striping for better readability (optional) */
.cv-table tbody tr:nth-child(odd) {
    background-color: var(--current-bg-element-zebra, transparent); /* Define --current-bg-element-zebra or use transparent */
}
:root {
    --current-bg-element-zebra: rgba(0,0,0,0.02); /* Very subtle striping for light mode */
}
html[data-theme="dark"] {
    --current-bg-element-zebra: rgba(255,255,255,0.03); /* Subtle striping for dark mode */
}


/* Utility Classes for Responsiveness (Show/Hide) */
.hide-on-mobile { display: none !important; }
.show-on-mobile { display: block !important; } /* Or inline, inline-block, flex as needed */

@media (min-width: 768px) { /* Tablet and up */
    .hide-on-mobile { display: block !important; } /* Or appropriate display type */
    .show-on-mobile { display: none !important; }

    .hide-on-desktop { display: none !important; }
    .show-on-desktop { display: block !important; } /* Or appropriate display type */
}
/* Default state for desktop-targeted classes (hidden on mobile) */
.hide-on-desktop { display: block !important; } /* Shown on mobile by default */
.show-on-desktop { display: none !important; } /* Hidden on mobile by default */


/* User Avatar Button */
.user-avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: var(--current-primary-blue); /* Default initials background */
    color: var(--current-text-on-primary);
    font-weight: 500; /* Medium weight for initials */
    font-size: 0.9rem; /* Slightly smaller font for initials if needed */
    text-transform: uppercase;
    overflow: hidden;
    border: 1.5px solid var(--current-bg-white); /* White border for pop effect, common in iOS */
    cursor: pointer;
    transition: transform 0.15s ease-out, box-shadow 0.15s ease-out; /* Faster transitions */
}
html[data-theme="dark"] .user-avatar {
    border-color: var(--cv-dark-bg-element); /* Border color matches dark background */
}
.user-avatar:hover {
    transform: scale(1.05); /* Subtle scale on hover */
    box-shadow: var(--current-shadow-md); /* Add shadow on hover */
}
.user-avatar img { /* If image is used */
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* border-radius: 50%; /* Already circular due to parent */
}
@media (min-width: 768px) { /* Larger avatar for desktop */
    .user-avatar {
        width: 36px;
        height: 36px;
        font-size: 1rem;
    }
}

/* User Menu Modal (Popover Style) */
.user-menu-modal .cv-modal-content {
    padding: var(--cv-spacing-xs) 0; /* remove padding horizontal */
    max-width: 250px; /* popover mais estreito */
    border-radius: var(--cv-border-radius-md);
    box-shadow: var(--current-shadow-lg);
    position: absolute;
    top: calc(var(--cv-header-height-mobile, 50px) + var(--cv-spacing-xs));
    right: var(--cv-spacing-sm);
    width: auto;
    height: auto;
    animation: popover-appear 0.15s ease-out;
}

@media (min-width: 768px) {
    .user-menu-modal .cv-modal-content {
        top: calc(var(--cv-header-height-desktop, 60px) + var(--cv-spacing-xs));
        right: var(--cv-spacing-md);
    }
}

/* User Menu Modal Header */
.user-menu-modal .cv-modal-header {
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    min-height: auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

.user-menu-modal .cv-modal-header h2.user-menu-username {
    font-size: var(--cv-font-size-md);
    text-align: left;
    margin: 0;
    flex-grow: 1;
}

@keyframes popover-appear { /* Simple fade-in and slight scale for popovers */
    from {
        opacity: 0;
        transform: scale(0.95) translateY(-5px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

.user-menu-modal .cv-modal-header { /* User menu usually doesn't have a header */
    display: none;
}
.user-menu-modal .cv-modal-body {
    padding: var(--cv-spacing-xs) 0; /* Vertical padding for list */
}
.user-menu-modal .cv-modal-footer {
    display: none; /* User menus typically don't have a footer with OK/Cancel */
}

.user-menu-modal .cv-modal-close {
    position: static;          /* Remove absolute positioning if flex order is used */
    transform: none;           /* Remove transform if not absolutely positioned */
    width: 24px;
    height: 24px;
    font-size: 16px;
    order: 1;                  /* Ensures close button comes after the title in flex layout */
}


/* User Menu List Items */
.user-menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
}
.user-menu-list li { /* List item acts as container for button */
    padding: 0 var(--cv-spacing-sm); /* Horizontal padding for items */
}
.user-menu-list li:first-child .cv-button {
    border-top-left-radius: var(--cv-border-radius-md); /* Round top corners of first item */
    border-top-right-radius: var(--cv-border-radius-md);
}
.user-menu-list li:last-child .cv-button {
    border-bottom-left-radius: var(--cv-border-radius-md); /* Round bottom corners of last item */
    border-bottom-right-radius: var(--cv-border-radius-md);
}

.user-menu-list .cv-button { /* Style buttons as menu items */
    width: 100%;
    justify-content: flex-start; /* Align text to left */
    background-color: transparent;
    color: var(--current-text-primary);
    border-radius: 0; /* No individual radius, handled by li or modal content */
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    min-height: 40px; /* Slightly smaller min-height for menu items */
    font-weight: normal; /* Normal weight for menu items */
    border: none; /* No border for menu items */
}
.user-menu-list .cv-button:hover {
    background-color: var(--cv-primary-blue-alpha-15);
    color: var(--current-primary-blue);
}
html[data-theme="dark"] .user-menu-list .cv-button:hover {
    background-color: var(--cv-dark-primary-blue-alpha-20);
    color: var(--cv-dark-primary-blue);
}
.user-menu-list .cv-button:active {
    transform: none; /* No scale transform for menu items */
    background-color: var(--cv-primary-blue-alpha-15); /* Keep hover state on active */
    filter: brightness(95%);
}
html[data-theme="dark"] .user-menu-list .cv-button:active {
    background-color: var(--cv-dark-primary-blue-alpha-20);
}

/* Separator for user menu (optional) */
.user-menu-list .menu-separator {
    height: 1px;
    background-color: var(--current-border-subtle);
    margin: var(--cv-spacing-xs) 0;
}


/* Skeleton Screen Components */
.feed-skeleton-container {
    /* This container is managed by JS to show/hide all skeletons within it */
}

.feed-skeleton-item { /* Represents a single card skeleton */
    background-color: var(--current-bg-white);
    border: var(--cv-border-width) solid var(--current-border-subtle); /* Use subtle border */
    border-radius: var(--cv-border-radius-lg);
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-sm); /* Lighter shadow */
    position: relative;
    overflow: hidden;
}

/* Base for all skeleton placeholder elements (lines, blocks, circles) */
.skeleton-block {
    background-color: var(--current-skeleton-bg); /* Defined in :root and dark theme */
    border-radius: var(--cv-border-radius-sm);
    margin-bottom: var(--cv-spacing-sm);
}
.skeleton-block:last-child {
    margin-bottom: 0;
}

/* Title placeholder */
.skeleton-title {
    width: 70%; /* Slightly wider */
    height: 1.125rem; /* Corresponds to --cv-font-size-text-lg or h4 */
    margin-bottom: var(--cv-spacing-sm); /* Less margin after title if followed by text */
}
@media (min-width: 768px) {
    .skeleton-title {
        height: 1.25rem; /* Larger on desktop */
    }
}

/* Text line placeholders */
.skeleton-line {
    width: 100%;
    height: 0.875rem; /* Corresponds to --cv-font-size-text-md */
}
.skeleton-line:not(:last-child) {
    margin-bottom: var(--cv-spacing-xs); /* Tighter spacing between text lines */
}
.skeleton-line--short {
    width: 60%; /* Adjusted width */
}
.skeleton-line--medium {
    width: 85%; /* Adjusted width */
}

/* Image placeholder */
.skeleton-image {
    width: 100%;
    aspect-ratio: 16 / 9;
    margin-bottom: var(--cv-spacing-sm);
    border-radius: var(--cv-border-radius-sm); /* Consistent radius with other blocks */
}

/* Avatar placeholder */
.skeleton-avatar {
    width: 36px; /* Standard avatar size */
    height: 36px;
    border-radius: 50%;
    margin-right: var(--cv-spacing-sm);
    /* float: left; /* Avoid float, use flexbox in parent if needed */
}
@media (min-width: 768px) {
    .skeleton-avatar {
        width: 40px;
        height: 40px;
    }
}

/* Grouping skeleton blocks (e.g., avatar + text lines) */
.skeleton-block-group {
    display: flex;
    /* align-items: center; /* Example: if avatar and text lines should be centered */
}
.skeleton-block-group .skeleton-block:last-child {
    margin-bottom: var(--cv-spacing-sm); /* Ensure group has bottom margin if not last element */
}


/* Shimmer Animation */
.feed-skeleton-item::after { /* Apply shimmer to the whole card */
    content: '';
    position: absolute;
    top: 0;
    left: -150%; /* Start further left */
    height: 100%;
    width: 150%; /* Wider shimmer */
    background: linear-gradient(
        90deg,
        transparent,
        var(--current-skeleton-shimmer-color), /* Defined in :root and dark theme */
        transparent
    );
    transform: skewX(-20deg); /* Angled shimmer */
    animation: skeleton-shimmer 1.8s infinite linear; /* Slower, linear animation */
}

@keyframes skeleton-shimmer {
    0% { left: -150%; }
    100% { left: 150%; }
}

/* Variables for skeleton are already defined in :root and html[data-theme="dark"] in styles.css */


/* === Status Badge Utility Classes === */
.status-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--cv-spacing-xs); /* Smaller gap */
    font-size: 0.7rem; /* Smaller font size for badges */
    font-weight: 500; /* Medium weight */
    padding: 2px 6px;
    border-radius: var(--cv-border-radius-sm);
    line-height: 1.2; /* Adjust line height */
}
.status-icon { /* If using emoji or font icon */
    font-size: 0.85em; /* Relative to badge font size */
    line-height: 1;
}
/* Emojis can be used directly in HTML or via ::before if preferred */
/* .status-icon.icon-success::before { content: "✅"; } */
/* .status-icon.icon-warning::before { content: "⚠️"; } */
/* .status-icon.icon-danger::before { content: "❌"; } */

.status-badge--success {
    background-color: var(--current-color-success-bg);
    color: var(--current-semantic-success);
    /* border: 1px solid var(--current-semantic-success); /* Optional: subtle border */
}
.status-badge--warning {
    background-color: var(--current-color-warning-bg);
    color: var(--current-semantic-warning);
    /* border: 1px solid var(--current-semantic-warning); */
}
.status-badge--danger, .status-badge--error { /* Alias for error */
    background-color: var(--current-color-error-bg);
    color: var(--current-semantic-error);
    /* border: 1px solid var(--current-semantic-error); */
}
.status-badge--info {
    background-color: var(--current-color-info-bg);
    color: var(--current-semantic-info);
    /* border: 1px solid var(--current-semantic-info); */
}
.status-badge--neutral { /* For neutral/gray badges */
    background-color: var(--cv-gray-200);
    color: var(--cv-gray-700);
    /* border: 1px solid var(--cv-gray-400); */
}
html[data-theme="dark"] .status-badge--neutral {
    background-color: var(--cv-dark-gray-400);
    color: var(--cv-dark-text-primary);
    /* border-color: var(--cv-dark-gray-500); */
}
/* === End Status Badge Utility Classes === */

/* === Progress Bar Component === */
.cv-progress {
    width: 100%;
    height: 8px; /* Thinner progress bar, more iOS like */
    background-color: var(--current-border-subtle);
    border-radius: 4px; /* Pill shape */
    overflow: hidden;
    display: none;
    margin-top: var(--cv-spacing-sm); /* Adjusted margin */
    margin-bottom: var(--cv-spacing-sm);
    /* box-shadow: inset 0 1px 1px rgba(0,0,0,0.05); /* Very subtle inner shadow */
}

.cv-progress__bar {
    height: 100%;
    width: 0%;
    background-color: var(--current-primary-blue);
    transition: width 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 4px; /* Match parent radius */
    /* No inner shadow on the bar itself for cleaner look */
}
/* === End Progress Bar Component === */

/* === Inline Spinner Utility (already styled with .cv-button .inline-spinner) === */
/* If a standalone version is needed: */
.cv-spinner { /* Generic spinner class */
    display: inline-block;
    width: 1.5em; /* Default size, can be overridden */
    height: 1.5em;
    border: 0.2em solid currentColor; /* Use current text color */
    border-right-color: transparent; /* Creates the spinning effect */
    border-radius: 50%;
    animation: cv-global-spin 0.75s linear infinite;
}
@keyframes cv-global-spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}


/* Empty State & Error State Components are in styles.css for better page context overrides */


/* === Switch Component (iOS Style) === */
.cv-switch-label {
    font-size: var(--cv-font-size-sm, 0.875rem); /* Tamanho da label */
    color: var(--current-text-secondary);
    cursor: pointer;
    user-select: none;
}

.cv-switch {
    position: relative;
    display: inline-block;
    width: 51px;  /* Standard iOS switch width */
    height: 31px; /* Standard iOS switch height */
    vertical-align: middle; /* Align with text if label is beside it */
}

.cv-switch input { /* Hide the actual checkbox */
    opacity: 0;
    width: 0;
    height: 0;
}

.cv-switch-slider { /* The track of the switch */
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--cv-gray-300); /* Off state background */
    transition: background-color 0.2s ease-in-out; /* Smooth transition for background */
    border-radius: 31px; /* Fully rounded ends */
}
html[data-theme="dark"] .cv-switch-slider {
    background-color: var(--cv-dark-gray-500); /* Dark theme off state */
}

.cv-switch-slider:before { /* The knob of the switch */
    position: absolute;
    content: "";
    height: 27px; /* Knob height */
    width: 27px;  /* Knob width */
    left: 2px;    /* Initial position */
    bottom: 2px;  /* Initial position */
    background-color: white;
    transition: transform 0.2s ease-in-out; /* Smooth transition for knob movement */
    border-radius: 50%;
    box-shadow: 0 1px 3px rgba(0,0,0,0.15), 0 1px 1px rgba(0,0,0,0.1); /* Subtle shadow for knob */
}
html[data-theme="dark"] .cv-switch-slider:before {
    background-color: var(--cv-dark-gray-200); /* Knob color for dark theme */
    box-shadow: 0 1px 3px rgba(0,0,0,0.3), 0 1px 1px rgba(0,0,0,0.25);
}


input:checked + .cv-switch-slider {
    background-color: var(--current-semantic-success); /* On state background (iOS often uses green) */
}
html[data-theme="dark"] input:checked + .cv-switch-slider {
    background-color: var(--cv-dark-semantic-success);
}

input:focus + .cv-switch-slider { /* Focus outline for accessibility */
    box-shadow: 0 0 0 2px var(--current-bg-light), 0 0 0 4px var(--current-primary-blue);
}
html[data-theme="dark"] input:focus + .cv-switch-slider {
    box-shadow: 0 0 0 2px var(--cv-dark-bg-page), 0 0 0 4px var(--cv-dark-primary-blue);
}


input:checked + .cv-switch-slider:before {
    transform: translateX(20px); /* Distance the knob moves (width - knob_width - 2*offset) = 51 - 27 - 4 = 20 */
}
/* === End Switch Component === */
