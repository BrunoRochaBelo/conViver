.cv-button {
    /* ... existing display, text-align, etc. ... */
    font-family: var(--cv-font-family-sans-serif);
    font-weight: 500; /* iOS uses medium weight more often than semibold */
    padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* e.g., 8px 16px */
    border-radius: var(--cv-border-radius-md); /* e.g., 8px - iOS often uses slightly smaller radii for buttons, like 6-8px */
    border: var(--cv-border-width) solid transparent;
    cursor: pointer;
    transition: background-color 0.15s ease-out, color 0.15s ease-out, border-color 0.15s ease-out, box-shadow 0.15s ease-out, transform 0.1s ease-out;
    background-color: var(--current-button-default-bg);
    color: var(--current-text-link); /* Default buttons in iOS often use the tint color for text */
    min-height: 44px; /* iOS touch target size guideline */
    display: inline-flex; /* To align text and potential icons */
    align-items: center;
    justify-content: center;
    line-height: 1.2; /* Adjust line height for better vertical centering if needed */
}
.cv-button:hover {
    background-color: var(--current-button-default-hover-bg);
    /* iOS doesn't typically use shadow on default button hover, but a subtle brightness change */
    filter: brightness(95%);
}
.cv-button:active {
    transform: scale(0.96); /* Slightly more pronounced active scale */
    background-color: var(--cv-gray-300); /* Darker shade for active state, consistent with iOS patterns */
    filter: brightness(90%);
    box-shadow: none;
}
.cv-button--primary {
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary);
    border-color: var(--current-primary-blue);
    font-weight: 500; /* Medium weight for primary buttons too */
}
.cv-button--primary:hover {
    filter: brightness(90%);
    box-shadow: none; /* iOS primary buttons usually don't have shadow on hover */
}
.cv-button--primary:active {
    filter: brightness(80%);
    transform: scale(0.96);
    box-shadow: none;
}

.cv-button--secondary {
    background-color: var(--current-button-secondary-bg); /* This is a gray in the current vars */
    color: var(--current-text-on-primary); /* Text on gray might need to be dark or light based on the gray */
    border-color: var(--current-button-secondary-bg);
    /* Let's adjust secondary to be more like iOS "gray" or "filled" buttons */
    background-color: var(--cv-gray-200); /* System Gray 5 Light */
    color: var(--current-text-primary); /* Black text on light gray */
    border-color: var(--cv-gray-200);
}
html[data-theme="dark"] .cv-button--secondary {
    background-color: var(--cv-dark-gray-400); /* System Gray 4 Dark */
    color: var(--cv-dark-text-primary); /* White text on dark gray */
    border-color: var(--cv-dark-gray-400);
}
.cv-button--secondary:hover {
    filter: brightness(92%);
    box-shadow: none;
}
.cv-button--secondary:active {
    filter: brightness(85%);
    transform: scale(0.96);
    box-shadow: none;
}

/* iOS style "Tinted" button (like a default button but with a light tint background) */
.cv-button--tinted {
    background-color: var(--cv-primary-blue-alpha-15); /* Needs to be defined: var(--cv-primary-blue) with low alpha */
    color: var(--current-primary-blue);
    border-color: transparent;
}
html[data-theme="dark"] .cv-button--tinted {
    background-color: var(--cv-dark-primary-blue-alpha-20); /* Needs to be defined */
}
.cv-button--tinted:hover {
    filter: brightness(95%);
}
.cv-button--tinted:active {
    filter: brightness(90%);
    transform: scale(0.96);
}

/* iOS style "Borderless" or "Text" button - already similar to default .cv-button if bg is transparent */
.cv-button--borderless {
    background-color: transparent;
    color: var(--current-text-link);
    border-color: transparent;
}
.cv-button--borderless:hover {
    background-color: var(--cv-gray-100-alpha-50); /* Very subtle hover, needs alpha var */
    filter: none; /* Remove general hover filter if specific bg is used */
}
html[data-theme="dark"] .cv-button--borderless:hover {
    background-color: var(--cv-dark-gray-100-alpha-50); /* Needs alpha var */
}
.cv-button--borderless:active {
    background-color: var(--cv-gray-200-alpha-70); /* Subtle active, needs alpha var */
    transform: scale(0.96);
    filter: none;
}


.cv-button.icon-button {
    padding: var(--cv-spacing-xs); /* iOS icon buttons are often smaller */
    min-height: 36px; /* Smaller touch target if purely iconic and small */
    min-width: 36px; /* Ensure it's square or appropriately sized */
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}
.cv-button.icon-button.has-indicator::after {
    content: "";
    position: absolute;
    top: 4px;
    right: 4px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: var(--current-primary-blue);
}

/* Para animação de rotação do ícone */
.cv-button.icon-button svg {
    transition: transform 0.3s ease;
}
.cv-button.icon-button.rotated svg {
    transform: rotate(180deg);
}

.cv-button:disabled,
.cv-button--primary:disabled,
.cv-button--secondary:disabled {
    background-color: var(--current-button-disabled-bg);
    color: var(--current-button-disabled-text);
    cursor: not-allowed;
    border-color: var(--current-button-disabled-border);
    box-shadow: none;
    filter: none; /* Ensure no brightness filter on disabled state */
}

.cv-card {
    background-color: var(--current-bg-white);
    border: var(--cv-border-width) solid var(--current-border-color);
    border-radius: var(--cv-border-radius-lg);
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-md);
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
}

.cv-card--clickable:hover {
    transform: translateY(-2px);
    box-shadow: var(--current-shadow-lg);
}

.cv-card__title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--current-text-primary);
    margin-bottom: var(--cv-spacing-sm);
}

.cv-card__subtitle {
    font-size: 0.9rem;
    color: var(--current-text-secondary);
    margin-bottom: var(--cv-spacing-md);
}

/* Generic grid layout for card collections */
.card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--cv-spacing-md);
}

.cv-input {
    font-family: var(--cv-font-family-sans-serif);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border: var(--cv-border-width) solid var(--current-border-color);
    border-radius: var(--cv-border-radius-md);
    font-size: 1rem;
    line-height: 1.5;
    background-color: var(--current-bg-white);
    color: var(--current-text-primary);
    width: 100%;
    box-sizing: border-box;
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.cv-input::placeholder {
    color: var(--current-text-placeholder);
}
.cv-input:focus {
    border-color: var(--current-primary-blue);
    outline: 0;
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow);
}

.cv-input--error {
    border-color: var(--current-semantic-error);
    background-color: var(--current-color-error-bg);
}
.cv-input--error:focus {
    border-color: var(--current-semantic-error);
    /* Assuming --current-input-focus-shadow is adaptable or we need a semantic error focus shadow */
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow); /* This might need adjustment if focus shadow is always blue */
}
.cv-input--success {
    border-color: var(--current-semantic-success);
    background-color: var(--current-color-success-bg);
}
.cv-input--success:focus {
    border-color: var(--current-semantic-success);
    /* Assuming --current-input-focus-shadow is adaptable or we need a semantic success focus shadow */
    box-shadow: 0 0 0 3px var(--current-input-focus-shadow); /* This might need adjustment */
}

/* REMOVED .cv-modal__content from components.css to rely on .cv-modal-content in styles.css for consistency */
/*
.cv-modal__content {
    background-color: var(--current-bg-white);
    margin: 5% auto;
    padding: var(--cv-spacing-lg);
    border: none;
    width: 90%;
    max-width: 500px;
    border-radius: var(--cv-border-radius-lg);
    position: relative;
    box-shadow: var(--current-shadow-lg);
    animation-name: animatetop;
    animation-duration: 0.4s;
    animation-timing-function: ease-out;
}
@media (min-width: 768px) {
    .cv-modal__content {
        margin: 10% auto;
    }
}
*/

/* === Global Feedback Toast Styles === */
.global-feedback-container {
    position: fixed;
    top: var(--cv-spacing-md, 16px); /* Use CSS variable or fallback */
    right: var(--cv-spacing-md, 16px);
    z-index: 1050; /* Ensure it's above most other content */
    display: flex;
    flex-direction: column;
    gap: var(--cv-spacing-sm, 8px);
    max-width: 350px; /* Or whatever width is desired */
}

.global-feedback-toast {
    background-color: var(--current-bg-white, #fff);
    color: var(--current-text-primary, #333);
    padding: var(--cv-spacing-md, 16px);
    border-radius: var(--cv-border-radius-md, 8px);
    box-shadow: var(--current-shadow-lg, 0 4px 12px rgba(0,0,0,0.15));
    display: flex;
    justify-content: space-between;
    align-items: center;
    opacity: 0;
    transform: translateX(100%);
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    min-width: 280px; /* Minimum width */
    border-left: 5px solid transparent; /* For type indication */
}

.global-feedback-toast--visible {
    opacity: 1;
    transform: translateX(0);
}

.global-feedback-toast--hiding {
    opacity: 0;
    transform: translateX(110%); /* Move a bit further out when hiding */
}

.global-feedback-toast__close-btn {
    background: none;
    border: none;
    color: var(--current-text-secondary, #777);
    font-size: 1.5rem;
    line-height: 1;
    padding: 0 var(--cv-spacing-xs, 4px);
    margin-left: var(--cv-spacing-md, 16px);
    cursor: pointer;
    transition: color 0.2s ease, transform 0.15s ease-out, opacity 0.2s ease;
}

.global-feedback-toast__close-btn:hover {
    color: var(--current-text-primary, #333);
    opacity: 0.7;
}

.global-feedback-toast__close-btn:active {
    transform: scale(0.90);
    opacity: 0.5;
}

/* Type-specific styles */
/* Using existing semantic color variables where appropriate */
.global-feedback-toast--success {
    border-left-color: var(--current-semantic-success, green);
    /* background-color: var(--current-color-success-bg, #e6fffa); */ /* Optional: subtle background */
}
.global-feedback-toast--success .global-feedback-toast__close-btn {
    /* color: var(--current-semantic-success, green); */ /* Optional: themed close button */
}

.global-feedback-toast--error {
    border-left-color: var(--current-semantic-error, red);
    /* background-color: var(--current-color-error-bg, #ffe6e6); */
}

.global-feedback-toast--warning {
    border-left-color: var(--current-semantic-warning, orange);
    /* background-color: var(--current-color-warning-bg, #fff0e6); */
}

.global-feedback-toast--info {
    border-left-color: var(--current-semantic-info, blue);
    /* background-color: var(--current-color-info-bg, #e6f7ff); */
}
/* === End Global Feedback Toast Styles === */

/* === Alert Component Styles === */
.cv-alert {
    padding: var(--cv-spacing-md); /* 16px */
    margin-bottom: var(--cv-spacing-md); /* 16px */
    border: var(--cv-border-width) solid transparent;
    border-radius: var(--cv-border-radius-md); /* 8px */
    font-size: 0.9rem;
    text-align: left; /* Default to left, can be overridden */
}

.cv-alert--error {
    color: var(--current-semantic-error);
    background-color: var(--current-color-error-bg);
    border-color: var(--current-semantic-error);
}

.cv-alert--success {
    color: var(--current-semantic-success);
    background-color: var(--current-color-success-bg);
    border-color: var(--current-semantic-success);
}

.cv-alert--warning {
    color: var(--current-semantic-warning);
    background-color: var(--current-color-warning-bg);
    border-color: var(--current-semantic-warning);
}

.cv-alert--info {
    color: var(--current-semantic-info);
    background-color: var(--current-color-info-bg);
    border-color: var(--current-semantic-info);
}

/* Utility class to hide alerts when needed */
.cv-alert--hidden {
    display: none;
}
/* === End Alert Component Styles === */

@keyframes animatetop {
    from {top: -300px; opacity: 0}
    to {top: 0; opacity: 1}
}

.cv-modal__close {
    color: var(--current-text-placeholder); /* Was --cv-gray-500 */
    /* Consider using an SVG icon or a styled '×' */
}
.cv-modal__close:hover,
.cv-modal__close:focus {
    color: var(--current-text-primary);
}
.cv-modal__title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--current-text-primary);
    margin-bottom: var(--cv-spacing-md);
}

.cv-header {
    /* Apple-inspired styling */
    background-color: rgba(242, 242, 247, 0.8); /* Light mode translucent background (System Gray 6 with alpha) */
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    backdrop-filter: blur(20px) saturate(180%);
    color: var(--current-text-primary);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Subtle border for light mode */
    position: sticky; /* Make header sticky */
    top: 0;
    z-index: 1020; /* Ensure it's above other content but below modals */
    transition: transform 0.3s ease-in-out;
}
.cv-header--hidden {
    transform: translateY(-100%);
}
.cv-header--floating {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1020;
}
.cv-header__container {
    display: flex;
    align-items: center;
    gap: var(--cv-spacing-md);
    width: 100%;
}

html[data-theme="dark"] .cv-header {
    background-color: rgba(44, 44, 46, 0.75); /* Dark mode translucent background (System Gray 2 Dark with alpha) */
    border-bottom: 1px solid rgba(255, 255, 255, 0.15); /* Subtle border for dark mode */
}

@media (min-width: 768px) {
    .cv-header {
        padding: var(--cv-spacing-md) var(--cv-spacing-lg); /* Desktop padding */
        flex-wrap: nowrap;
    }
}
.cv-header__title {
    margin: 0;
    font-size: 1.25rem; /* Adjusted for a more Apple-like feel */
    font-weight: 600; /* Open Sans Semibold */
}
@media (min-width: 768px) {
    .cv-header__title {
        font-size: 1.5rem; /* Desktop title size */
    }
}

.cv-nav {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    gap: var(--cv-spacing-xs);
    /* Apple-inspired styling for nav - similar to header but can be slightly different */
    background-color: rgba(248, 248, 250, 0.85); /* Slightly different from header, or could be same */
    -webkit-backdrop-filter: blur(18px) saturate(170%);
    backdrop-filter: blur(18px) saturate(170%);
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    border-bottom: 1px solid rgba(0, 0, 0, 0.08); /* Subtle border for light mode */
    border-radius: var(--cv-border-radius-lg);
    /* position: sticky; /* If nav should also stick below header */
    /* top: YOUR_HEADER_HEIGHT; /* Calculate or set fixed header height */
    /* z-index: 1010; */
}

/* Main navigation in the layout shouldn't show the bottom border */
#mainNav.cv-nav {
    border-bottom: none;
}
html[data-theme="dark"] #mainNav.cv-nav {
    border-bottom: none;
}
.cv-nav__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    gap: var(--cv-spacing-sm);
}

html[data-theme="dark"] .cv-nav {
    background-color: rgba(50, 50, 52, 0.8); /* Dark mode nav bg */
    border-bottom: 1px solid rgba(255, 255, 255, 0.12);
}

.cv-nav__link {
    color: var(--current-text-primary); /* Changed from text-link for a more subdued default state */
    text-decoration: none;
    font-weight: normal;
    display: flex; /* Support icon and label */
    align-items: center;
    width: 100%;
    text-align: left;
    padding: var(--cv-spacing-sm);
    border-radius: var(--cv-border-radius-md);
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, transform 0.1s ease-in-out;
    font-weight: 500;
    gap: var(--cv-spacing-sm); /* Aumentado de xs para sm (4px para 8px) */
}
.cv-nav__icon {
    width: 20px;
    height: 20px;
    display: inline-block;
    vertical-align: middle;
}
.cv-nav__label {
    line-height: 1;
    margin-left: var(--cv-spacing-xs); /* Ensures clear space between icon and text */
}
@media (min-width: 768px) {
    .cv-nav {
        flex-direction: row;
        align-items: center;
        width: auto; /* Revert to auto width for desktop */
        gap: var(--cv-spacing-sm); /* Restore original gap */
        /* padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* Ensure this is suitable or adjust */
        /* Consider removing bottom border for desktop if header has one and they are visually connected */
        /* border-bottom: none; */
    }
    html[data-theme="dark"] .cv-nav {
        /* border-bottom: none; */ /* Example for dark theme desktop */
    }
    .cv-nav__link {
        display: inline-block; /* Revert for desktop */
        width: auto;
        text-align: center; /* Or left, depending on design */
        padding: var(--cv-spacing-sm) var(--cv-spacing-md); /* Adjusted padding for desktop */
    }
}
.cv-nav__link:hover {
    background-color: rgba(0, 0, 0, 0.05); /* Subtle hover for light mode */
    color: var(--current-primary-blue);
    /* transform: translateY(-1px); /* Optional: subtle lift */
}
html[data-theme="dark"] .cv-nav__link:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Subtle hover for dark mode */
}

.cv-nav__link--active {
    /* background-color: var(--current-primary-blue); */ /* Remove background color */
    /* color: var(--current-text-on-primary) !important; */ /* Remove text color change to on-primary */
    color: var(--current-primary-blue) !important; /* Ensure active link text is primary blue */
    font-weight: 600; /* Semibold for active link - iOS often uses bold or a different weight for selected tab */
    /* box-shadow: 0 1px 3px rgba(0, 122, 255, 0.2); */ /* Remove box shadow */

    /* iOS style active tab indicator: often just a color change for the text/icon, or a subtle underline/pill */
    /* Option 1: Just color change (already done by setting color to --current-primary-blue) */

    /* Option 2: Subtle bottom border (more common in web, but can be iOS-like if minimal) */
    /* border-bottom: 2px solid var(--current-primary-blue); */
    /* padding-bottom: calc(var(--cv-spacing-sm) - 2px); */ /* Adjust padding to account for border */

    /* Option 3: Pill shape background (less common for nav links, more for segmented controls) */
    /* background-color: var(--cv-primary-blue-alpha-15); */ /* Light tinted background */
    /* border-radius: 16px; */ /* Pill shape */
    /* padding: var(--cv-spacing-xs) var(--cv-spacing-md); */ /* Adjust padding for pill */

    /* Let's go with a simple text color change and font weight, which is very iOS like for tabs */
    background-color: transparent; /* Explicitly ensure no background color from default state */
}
.cv-nav__link--active:hover {
    /* background-color: var(--current-primary-blue); */ /* Remove background color on hover */
    /* filter: brightness(90%); */ /* No filter needed if bg is transparent */
    color: var(--current-primary-blue) !important; /* Keep text color as primary blue on hover */
    background-color: rgba(0, 0, 0, 0.03); /* Very subtle hover for light mode active link */
}
html[data-theme="dark"] .cv-nav__link--active {
    color: var(--cv-dark-primary-blue) !important; /* Ensure active link text is dark primary blue */
}
html[data-theme="dark"] .cv-nav__link--active:hover {
    color: var(--cv-dark-primary-blue) !important; /* Keep text color */
    background-color: rgba(255, 255, 255, 0.05); /* Very subtle hover for dark mode active link */
}

/* --- Mobile Nav Drawer --- */
.cv-nav-hamburger {
    background: none;
    border: none;
    padding: var(--cv-spacing-sm);
    display: flex;
    align-items: center;
    justify-content: center;
}
@media (min-width: 768px) {
    .cv-nav-hamburger {
        display: none;
    }
}

.cv-nav--drawer {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.4);
    display: none;
    z-index: 1040;
}
.cv-nav--drawer.open {
    display: block;
}
.cv-nav--drawer__panel {
    background-color: var(--current-bg-white);
    width: 250px;
    max-width: 80%;
    height: 100%;
    transform: translateX(-100%);
    transition: transform 0.3s ease;
}
.cv-nav--drawer.open .cv-nav--drawer__panel {
    transform: translateX(0);
}
html[data-theme="dark"] .cv-nav--drawer__panel {
    background-color: var(--cv-dark-gray-200);
}

/* === Bottom Navigation Bar === */
.cv-bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    display: none;
    background-color: rgba(248, 248, 250, 0.85);
    -webkit-backdrop-filter: blur(18px) saturate(170%);
    backdrop-filter: blur(18px) saturate(170%);
    border-top: 1px solid rgba(0, 0, 0, 0.08);
    padding: var(--cv-spacing-xs) 0 calc(var(--cv-spacing-xs) + env(safe-area-inset-bottom, 0));
}
html[data-theme="dark"] .cv-bottom-nav {
    background-color: rgba(50, 50, 52, 0.8);
    border-top: 1px solid rgba(255, 255, 255, 0.12);
}

.cv-bottom-nav__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: space-around;
}

.cv-bottom-nav__link {
    display: flex;
    flex-direction: column;
    align-items: center;
    color: var(--current-text-primary);
    text-decoration: none;
    font-size: 0.75rem;
    padding: var(--cv-spacing-xs);
}

.cv-bottom-nav__icon {
    width: 24px;
    height: 24px;
}

.cv-bottom-nav__label {
    line-height: 1;
}

body.has-bottom-nav {
    padding-bottom: calc(70px + env(safe-area-inset-bottom, 0));
}

body.has-bottom-nav .fab-menu {
    bottom: calc(var(--cv-bottom-nav-height, 70px) + var(--cv-spacing-lg, 20px) + env(safe-area-inset-bottom, 0));
}


body.has-bottom-nav #mainNav {
    display: none;
}

.cv-bottom-nav__link--active {
    color: var(--current-primary-blue);
    font-weight: 600;
}

@media (max-width: 767px) {
    .cv-bottom-nav {
        display: block;
    }
}
@media (min-width: 768px) {
    .cv-bottom-nav {
        display: none;
    }
}


/* Responsive Table Wrapper */
.cv-table-responsive-wrapper {
    overflow-x: auto;
    overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
    width: 100%;
    margin-bottom: var(--cv-spacing-md); /* Space below scrollable table */
    display: block;
}

/* Apply to actual <table> elements, ensure it can be overridden for specific table needs */
.cv-table {
    width: 100%; /* Default to full width within its container */
    border-collapse: collapse; /* Common practice */
    /* min-width: 600px; */ /* Example: if table content is wide, forces scrollbar.
                              This should be set based on table content, or on specific table instances.
                              Avoid setting a global min-width here unless all tables are complex. */
}

/* Utility Classes for Responsiveness */
.hide-on-mobile {
    display: none !important; /* Use !important to ensure override if needed, use sparingly */
}
@media (min-width: 768px) { /* Tablet and up */
    .hide-on-mobile {
        display: block !important; /* Or flex, inline, etc., as appropriate to restore */
    }
}

.hide-on-desktop {
    display: block !important; /* Or flex, etc. */
}
@media (min-width: 768px) { /* Tablet and up */
    .hide-on-desktop {
        display: none !important;
    }
}
/* User avatar button */
.user-avatar {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: var(--current-primary-blue);
    color: var(--current-text-on-primary);
    font-weight: 600;
    text-transform: uppercase;
    overflow: hidden;
    border: 1.5px solid var(--current-primary-blue); /* Subtle border, themed */
    cursor: pointer;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.user-avatar:hover {
    transform: scale(1.1);
    box-shadow: 0 0 8px rgba(0, 122, 255, 0.5); /* Subtle glow effect */
}
.user-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
}
/* User menu modal overrides */
/* Assuming userMenuModal has the ID 'userMenuModal' or a specific class like '.user-menu-modal-instance' */
/* Let's use a more specific selector if possible, e.g., #userMenuModal .cv-modal-content */
/* For now, using .user-menu-modal class on the .cv-modal element */

.user-menu-modal .cv-modal-content { /* Styles for the content box of the user menu */
    /* padding: var(--cv-spacing-xs); /* Padding será tratado pelo header/body se necessário, ou removido para popover */
    padding: 0; /* Removido para um look mais justo de popover */
    display: flex;
    flex-direction: column;
    max-width: 280px; /* Smaller max-width for user menu modal, more like a popover */
    border-radius: var(--cv-border-radius-md); /* Slightly smaller radius for popover feel */
    box-shadow: var(--current-shadow-lg); /* Popovers often have a more distinct shadow */
    /* Override general modal animation if a different one is desired, e.g., fade-in or slide-from-top */
    /* animation: user-menu-pop-in 0.2s ease-out; */
    /* margin-top: 60px; */ /* Control positioning with top/right */
    /* margin-right: var(--cv-spacing-md); */ /* Control positioning with top/right */
    margin-left: auto; /* Allows it to be pushed to the right by the parent .cv-modal flex centering */
    position: absolute; /* Take it out of the normal flow of .cv-modal content centering */
    top: calc(var(--cv-header-height, 60px) + var(--cv-spacing-sm)); /* Position below header; needs --cv-header-height var */
    right: var(--cv-spacing-md); /* 16px from right edge */
    width: auto; /* Let content dictate width up to max-width */
    height: auto; /* Let content dictate height */
    /* The parent .cv-modal provides the full screen overlay and initial centering.
       These absolute positioning rules then place the .cv-modal-content specifically for the user menu. */
}

/* Define --cv-header-height in :root or where .cv-header is styled */
/* Example, if header height is dynamic, JS might need to set this variable.
   For a fixed example:
   :root { --cv-header-height: 56px; }
   @media (min-width: 768px) { :root { --cv-header-height: 68px; } }
*/


.user-menu-modal .cv-modal-header {
    padding: var(--cv-spacing-sm) var(--cv-spacing-md);
    min-height: auto; /* No strict min-height */
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* position: relative; /* Not needed if close button is part of flex order and handled by .cv-modal-close general style */
    border-bottom: 1px solid var(--current-border-subtle); /* Add separator if header is used */
}

.user-menu-modal .cv-modal-header h2.user-menu-username {
    font-size: var(--cv-font-size-md);
    text-align: left;
    margin: 0;
    flex-grow: 1;
    /* Adjust padding if close button is on the right via flex order */
    padding-right: calc(28px + var(--cv-spacing-sm) * 2); /* width of close button + its own right padding + desired gap */
}

.user-menu-modal .cv-modal-body {
    padding: var(--cv-spacing-sm); /* Add some padding around the list */
}
.user-menu-modal .cv-modal-footer {
    display: none; /* User menus typically don't have a footer with OK/Cancel */
}

/* The .cv-modal-close inside .user-menu-modal will inherit the new global styles.
   Its position is already absolute and top/right are relative to .cv-modal-content.
   The new global .cv-modal-close uses var(--cv-spacing-sm) for top/right, which is 8px.
   This should be fine for a popover-style menu.
   No specific overrides for .user-menu-modal .cv-modal-close seem necessary
   if the global styles are correctly applied and desired.
   The parent .cv-modal-content has padding:0 now, so the close button will be
   8px from the visual edge of the popover.
*/
/*
.user-menu-modal .cv-modal-close {
    position: absolute;
    top: var(--cv-spacing-sm); // Should match global .cv-modal-close
    right: var(--cv-spacing-sm); // Should match global .cv-modal-close
    // width and height will be inherited from global .cv-modal-close (28px)
    // font-size will be inherited (14px)
}
*/

.user-menu-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--cv-spacing-sm);
}
.user-menu-list button {
    width: 100%;
}

/* Skeleton Screen Components */
.feed-skeleton-container {
    /* This container is managed by JS (display: block/none) */
}

.feed-skeleton-item {
    background-color: var(--current-bg-white); /* Match card background */
    border: var(--cv-border-width) solid var(--current-border-color); /* Match card border */
    border-radius: var(--cv-border-radius-lg); /* Match card radius */
    padding: var(--cv-spacing-md);
    margin-bottom: var(--cv-spacing-md);
    box-shadow: var(--current-shadow-md); /* Match card shadow */
    position: relative;
    overflow: hidden; /* Important for shimmer effect */
}

/* Base for skeleton placeholder elements */
.skeleton-block {
    background-color: var(--current-skeleton-bg, var(--cv-gray-200));
    border-radius: var(--cv-border-radius-sm); /* Consistent 4px radius */
    margin-bottom: var(--cv-spacing-sm); /* 8px */
}
.skeleton-block:last-child {
    margin-bottom: 0;
}

/* Specifics for title placeholder */
.skeleton-title {
    width: 60%;
    height: 1.25rem; /* Approx 20px, aligns with --cv-font-size-xl */
    margin-bottom: var(--cv-spacing-md); /* 16px, more space after a title */
}

/* Specifics for text line placeholders */
.skeleton-line {
    width: 100%;
    height: 0.875rem; /* Approx 14px, aligns with --cv-font-size-base or md */
}
.skeleton-line--short { /* More descriptive class name */
    width: 75%;
}
.skeleton-line--medium {
    width: 90%;
}
.skeleton-line--long { /* Explicitly full width if needed, otherwise default is 100% */
    width: 100%;
}


/* For simulating an image placeholder */
.skeleton-image {
    width: 100%;
    aspect-ratio: 16 / 9; /* Or common image aspect ratio */
    margin-bottom: var(--cv-spacing-sm);
}

/* For simulating an avatar placeholder */
.skeleton-avatar {
    width: 40px; /* Example size */
    height: 40px;
    border-radius: 50%; /* Circular */
    margin-right: var(--cv-spacing-sm);
    float: left; /* Example layout */
}
.skeleton-block-group {
    display: flex;
    flex-direction: column;
}


/* Shimmer Animation - remains the same */
.feed-skeleton-item::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        var(--current-skeleton-shimmer-color, rgba(255, 255, 255, 0.5)),
        transparent
    );
    transform: translateX(-100%);
    animation: skeleton-shimmer 1.5s infinite;
}

@keyframes skeleton-shimmer {
    0% { transform: translateX(-100%); }
    50% { transform: translateX(100%); }
    100% { transform: translateX(100%); }
}

/* Theme variables for skeleton (ensure these are in :root and html[data-theme="dark"]) */
/* :root {
    --current-skeleton-bg: var(--cv-gray-200);
    --current-skeleton-shimmer-color: rgba(255, 255, 255, 0.5);
}
html[data-theme="dark"] {
    --current-skeleton-bg: var(--cv-dark-gray-300); // Adjusted for dark theme
    --current-skeleton-shimmer-color: rgba(255, 255, 255, 0.1);
} */


/* === Status Badge Utility Classes === */
.status-badge {
    display: inline-flex;
    align-items: center;
    gap: 4px;
    font-size: 0.75rem;
    font-weight: 600;
    padding: 2px 6px;
    border-radius: var(--cv-border-radius-sm, 4px);
}
.status-icon {
    font-size: 0.8em;
    line-height: 1;
}
.status-icon.icon-success::before { content: "✅"; }
.status-icon.icon-warning::before { content: "⚠️"; }
.status-icon.icon-danger::before { content: "❌"; }
.status-badge--success {
    background-color: var(--current-color-success-bg);
    color: var(--current-semantic-success);
}
.status-badge--warning {
    background-color: var(--current-color-warning-bg);
    color: var(--current-semantic-warning);
}
.status-badge--danger {
    background-color: var(--current-color-error-bg);
    color: var(--current-semantic-error);
}/* === End Status Badge Utility Classes === */

/* === Progress Bar Component === */
.cv-progress {
    width: 100%;
    height: 12px; /* Aumentar a altura para melhor visibilidade */
    background-color: var(--current-border-subtle); /* Usar uma cor de fundo mais sutil */
    border-radius: var(--cv-border-radius-lg); /* Raio de borda maior, mais Apple-like */
    overflow: hidden;
    display: none; /* Controlado por JS */
    margin-top: var(--cv-spacing-md); /* Aumentar margem superior para espaçamento */
    margin-bottom: var(--cv-spacing-sm);
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.075); /* Sombra interna sutil */
}

.cv-progress__bar {
    height: 100%;
    width: 0%;
    background-color: var(--current-primary-blue);
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Transição mais suave */
    border-radius: var(--cv-border-radius-lg); /* Garante que a barra interna também tenha cantos arredondados */
    box-shadow: inset 0 -1px 0 rgba(0,0,0,0.1); /* Efeito de profundidade sutil */
}

/* === End Progress Bar Component === */

/* === Inline Spinner Utility === */
.inline-spinner {
    display: inline-block;
    width: 1em;
    height: 1em;
    border: 2px solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: cv-inline-spin 0.75s linear infinite;
    margin-left: 4px;
    vertical-align: middle;
}

@keyframes cv-inline-spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}


/* === Switch Component === */
.cv-switch-label {
    font-size: var(--cv-font-size-sm, 0.875rem); /* Tamanho da label */
    color: var(--current-text-secondary);
    cursor: pointer;
    user-select: none;
}

.cv-switch {
    position: relative;
    display: inline-block;
    width: 48px;  /* Largura do switch */
    height: 28px; /* Altura do switch */
}

.cv-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.cv-switch-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--cv-gray-300); /* Cor do fundo do switch desligado */
    transition: .4s;
    border-radius: 28px; /* Para torná-lo arredondado */
}

.cv-switch-slider:before {
    position: absolute;
    content: "";
    height: 20px; /* Tamanho do círculo deslizante */
    width: 20px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .cv-switch-slider {
    background-color: var(--current-primary-blue); /* Cor do fundo do switch ligado */
}

input:focus + .cv-switch-slider {
    box-shadow: 0 0 1px var(--current-primary-blue); /* Efeito de foco */
}

input:checked + .cv-switch-slider:before {
    transform: translateX(20px); /* Distância que o círculo desliza */
}
/* === End Switch Component === */

/* Reservas view toggle alignment */
.reservas-view-toggle {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
    flex-wrap: nowrap;
    gap: var(--cv-spacing-sm);
    margin-bottom: var(--cv-spacing-md);
    flex-direction: row !important;
}

